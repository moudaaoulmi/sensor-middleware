#LyX 1.6.8 created this file. For more info see http://www.lyx.org/
\lyxformat 345
\begin_document
\begin_header
\textclass scrartcl
\use_default_options false
\language english
\inputencoding auto
\font_roman default
\font_sans default
\font_typewriter default
\font_default_family default
\font_sc false
\font_osf false
\font_sf_scale 100
\font_tt_scale 100

\graphics default
\paperfontsize default
\spacing single
\use_hyperref false
\papersize default
\use_geometry false
\use_amsmath 0
\use_esint 0
\cite_engine basic
\use_bibtopic false
\paperorientation portrait
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\defskip medskip
\quotes_language english
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\author "" 
\author "" 
\end_header

\begin_body

\begin_layout Title
Agenţi BDI
\end_layout

\begin_layout Date
April 2, 2011 
\end_layout

\begin_layout Author
Bogdan Manaţe
\end_layout

\begin_layout Section
Introducere
\end_layout

\begin_layout Standard
\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset

BDI este unul din modelele folosite în dezvoltarea sistemelor bazate pe
 agenţi.
 Acest model se bazează pe capacitatea agenţilor de a-şi selecta planurile
 dinamic pentru a duce la sfârşit un scop.
 De asemenea agenţii trebuie să se adapteze la schimbări dinamice şi neprevăzute.
 Fără o schema de programare a activităţilor corespunzătoare, agenţii pot
 repeta activităţi care nu sunt necesare, pot folosi resurse într-un mod
 nejustificat sau chiar pot să nu îndeplinească cerinţele utilizatorului.
\end_layout

\begin_layout Standard
În general un agent raţional are următoarele proprietăţi: autonomie, abilităţi
 sociale, reactivitate şi iniţiativă.
 Printre alte arhitecturi orientate pe agenţi, modelul BDI, care este acronimul
 de la 
\begin_inset Quotes eld
\end_inset

Belief
\begin_inset Quotes erd
\end_inset

 - opinie, 
\begin_inset Quotes eld
\end_inset

Desire
\begin_inset Quotes erd
\end_inset

 - dorinţă, 
\begin_inset Quotes eld
\end_inset

Intention
\begin_inset Quotes erd
\end_inset

 - intenţie, fiecare termen reprezentând o stare mentală care este folosită
 în procesul de raţionament, este un model foarte bine dezvoltat şi care
 este adoptat în numeroase aplicaţii academice sau industriale.
\end_layout

\begin_layout Standard
Datorită dezvoltării sistemelor multi-agent, a rezultat faptul că agenţii
 trebuie să se adapteze la schimbările survenite în mediul în care rulează.
 O schemă de planificare a intenţilor poate fi folosită pentru a îmbunătăţii
 performanţele agenţilor BDI prin exploatarea interacţiunilor dintre sarcini
 şi evitarea eventualelor conflicte.
 Agentul poate salva astfel resursele sistemului prin executarea unei sarcini
 pe care altă dată nu va mai trebui să o execute.
 
\end_layout

\begin_layout Standard
Teoria modelului BDI este bazată pe teoria propusă de filozoful Michael
 Bratman.
 Intenţia este dorinţa pe care un agent doreşte să o indeplinească.
 Un agent poate să aibă mai multe dorinţe pe care poate să le realizeze
 sau nu.
 Un agent BDI are un set de planuri, pe care doreşte să le execute.
 Intenţile pot fi de asemenea tratate ca planuri pentru o eventuală execuţie.
 Modelul BDI este eficace, fiind folosit într-o gamă largă de domenii, cum
 ar fi controlul traficului aerian sau controlul navetelor spaţiale NASA.
\end_layout

\begin_layout Section
Descoperirea dinamică a scopurilor
\end_layout

\begin_layout Standard
\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset

Padgham şi Thangarajah au lucrat la un proiect destinat descoperii dinamice
 a scopurilor unui agent BDI.
 Rezultatele lor includ reprezentarea şi raţionarea scopurilor [1], detectarea
 conflictelor între resurse [2], detectarea scopurilor similare [3] şi interfere
nţele între scopuri [4].
 Ei au creat o structură arborescentă de tipul scop-plan, pentru a detecta
 interacţiunile dintre scopuri.
\end_layout

\begin_layout Standard
Intenţile pot fi tratate într-un mod diferit.
 Intenţile pot fi definite ca scopuri realizate.
 Tehnicile de mai sus vor fi aplicate pentru a descoperii interacţiunile
 dintre intenţii, care vor fi definite ca factori în procesul de planificare
 dinamică.
\end_layout

\begin_layout Section
Planificarea intenţilor
\end_layout

\begin_layout Standard
\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset

Sarcinile care sunt cele mai importante trebuie să li se ofere o prioritate
 mai mare şi mai mult timp pentru execuţie.
 JAM [5] foloseşte utilitatea pentru a descrie importanţa unui scop şi o
 foloseşte ca singur factor pentru selectarea intenţilor.
 Pentru a reprezenta utilitatea unui scop pentru utilizator, se foloseşte
 o variabilă denumită I-utility.
 Această variabilă poate să reprezinte un număr real sau o funcţie simplă,
 a cărei valori poate fi modificată dinamic.
 Variabila I-applicability reprezintă măsura în care un plan poate îndeplini
 un scop, aceasta se poate determina dinamic.
 Priorităţile indică gradul de întâietate al unei intenţii.
 
\end_layout

\begin_layout Standard
Pentru a evita depăşirea unui termen limită, priorităţile unei sarcini trebui
 incrementate când acest termen se apropie.
 Agentul responsabil de o sarcină trebuie să ştie când se apropie termenul
 limită al unui scop, cât timp durează executarea intenţilor şi funcţia
 responsabilă cu incrementarea priorităţii.
\end_layout

\begin_layout Standard
Calculul timpului necesar rulării unei intenţii este complicat, deoarece
 se ţine cont de două probleme.
 Prima dată trebuie să se ţină cont de planul asociat, care la rândul său
 mai poate să conţină subscopuri.
 Timpul de execuţie al unui scop nu poate fi calculat dacă planul nu este
 ales.
 Această problemă este cunoscută sub numele de problema planului indecis.
 În afară de subscopuri, fiecare pas poate fi rulat la un interval diferit
 de timp, în funcţie de maşina pe care rulează sau chiar de viteza reţelei.
 În acest caz se va folosi timpul de rulare estimativ ( ERT estimated running
 time ).
 Împreună cu arborele de intenţii, ERT poate ajuta agentul să calculeze
 minimul sau maximul posibil de timp pentru rularea intenţilor.
\end_layout

\begin_layout Standard
Executarea unei intenţii poate modifica opiniile unui agent sau alte intenţii.
 Interacţiunile dintre intenţii, atunci când acestea se ajută reciproc,
 se numesc interacţiuni pozitive.
 Un agent poate să-şi planifice intenţile pentru a evita conflicte sau pentru
 a salva din resursele sistemului.
 Relaţile de interacţiune pot indica relaţile dintre sarcini şi amploare
 influenţei reciproce.
 Totuşi, interacţiunile nu sunt tot timpul utile.
\end_layout

\begin_layout Standard
Interacţiunile pot fi specificate explicit în cadrul unui plan, cu toate
 acestea pot apărea instrucţiuni nespecificate.
 De exemplu, în timpul îndeplinirii unui scop, pot apărea efecte secundare
 care pot afecta opinile.
 Unele pre-condiţii, care trebuie păstrate în timpul execuţiei pot de asemenea
 cauza interacţiuni între intenţii.
\end_layout

\begin_layout Standard
În cazul în care este întreruptă o intenţie, un agent poate să-şi piardă
 datele.
 De exemplu costul întreruperii unei intenţii realizată în proporţie de
 80% cu prioritatea de 90, este mai mare decăt costul întreruperii unei
 intenţii realizate în proporţie de 20% având prioritate 100.
 Prin urmare, gradul de completitudine al unei intenţii trebuie luat în
 considerare când există interacţiuni negative între intenţii.
\end_layout

\begin_layout Standard
Cea mai simplă metodă de calcularea a gradului de completitudine este numărarea
 linilor de cod dintr-un plan care au fost executatea pentru o intenţie.
 Această metodă nu este însă şi cea mai sigură metodă de calculare a gradului
 de completitudine, deoarece fiecare linie de cod poate să aibă un anumit
 nivel de contribuţie.
\end_layout

\begin_layout Standard
În afară de eficienţă, mai trebuie luată în calcul şi corectitudinea.
 Intenţile care au o utilitate redusă pot să nu fie executate atunci când
 intenţile care au o utilitate ridicată se execută continuu.
 Pentru a evita acest lucru, priorităţile intenţilor care nu au fost executate
 trebuie incrementate.
 Daca intenţile cu utilitate redusă au interacţiuni negative cu alte intenţii,
 atunci incrementarea priorităţilor pentru aceste intenţi poate genera erori.
 Corectitudinea poate fi considerată doar pentru intenţile care nu interacţionea
ză cu altele.
\end_layout

\begin_layout Section
Arborele de intenţie
\end_layout

\begin_layout Standard
\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset

Arborii de decizie sunt folosiţi pentru problemelor care bazează pe alcătuirea
 unui plan.
 În Figura 
\begin_inset CommandInset ref
LatexCommand ref
reference "Fig:agentIntention"

\end_inset

 este prezentată o structură de intenţie a unui agent bazat pe arhitectura
 JAM, în timpul execuţiei.
 Intenţile care nu au fost încă executate sunt reprezentate ca dreptunghiuri
 desenate cu linie întreruptă.
 Când agentul execută activitatea 
\begin_inset Quotes eld
\end_inset

Mută-te la poziţia A
\begin_inset Quotes erd
\end_inset

 din cadrul firului de intenţie A, nu ţine cont de faptul că firul de intenţie
 B poate conţine o activitate 
\begin_inset Quotes eld
\end_inset

Mută-te la poziţia B
\begin_inset Quotes erd
\end_inset

, deoarece scopul 
\begin_inset Quotes eld
\end_inset

Cumpără pantofi
\begin_inset Quotes erd
\end_inset

 nu a ales ce plan să fie executat.
 Interacţiunea nu apare până când agentul nu decide care plan să-l execute.
 Pe de altă parte, când această decizie a fost luată acţiunea 
\begin_inset Quotes eld
\end_inset

Mută-te la poziţia A
\begin_inset Quotes erd
\end_inset

 poate să fie de mult executată.
 Situaţia se complică atunci când acţiunea 
\begin_inset Quotes eld
\end_inset

Mută-te la poziţia B
\begin_inset Quotes erd
\end_inset

 se află pe un nivel mult mai jos.
\end_layout

\begin_layout Standard
Problemele care trebuie să aleagă un plan pot bloca calcularea timpului
 de execuţie sau calcularea gradului de completitudine.
 Arborele de intenţie este aplicat pentru a modela comportamentele posibile
 ale unui agent.
 Nodurile arborelui înregistrează nu doar structura statică agentului, ci
 şi informaţile din timpul execuţiei.
 Un arbore de intenţie poate să aibă două tipuri de noduri: noduri pentru
 stocarea planurilor şi noduri pentru stocarea scopurilor.
 
\end_layout

\begin_layout Standard
Modul de construire a unui arbore de intenţie este recursiv pornind de la
 frunze spre rădăcină.
 Informaţia este actualizată în momentul execuţiei, îndeplinirii unui scop,
 adăugării unui nou plan sau în momentul eşuării unui plan.
 Cu toate acestea, un agent poate să preconizeze acţiunile pe care le poate
 executa.
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename structura de intentie.jpg

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
Structura de intenţie a unui agent
\end_layout

\end_inset


\begin_inset CommandInset label
LatexCommand label
name "Fig:agentIntention"

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
În Figura 
\begin_inset CommandInset ref
LatexCommand ref
reference "Fig:agentRuntimeIntention"

\end_inset

 scopul 
\begin_inset Quotes eld
\end_inset

Cumpără pantofi
\begin_inset Quotes erd
\end_inset

 nu a selectat planul pe care să-l execute, dar agentul are cunoştinţă despre
 existenţa acţiunii 
\begin_inset Quotes eld
\end_inset

Mută-te la poziţia B
\begin_inset Quotes erd
\end_inset

.
 Abilitatea unui agent de a prevede lucrurile pe care le poate realiza reprezint
ă un beneficiu pentru alegerea unui plan în cadrul arhitecturii BDI.
 De exemplu agentul poate alege un plan care nu generează conflicte cu planul
 care este în execuţie, sau să evite un plan care nu îndeplineşte termenul
 limită al scopului.
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename structura intentie runtime.jpg

\end_inset


\begin_inset Caption

\begin_layout Plain Layout
Structura de intenţie în timpul execuţiei
\end_layout

\end_inset


\begin_inset CommandInset label
LatexCommand label
name "Fig:agentRuntimeIntention"

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Section
Procesul de planificare
\end_layout

\begin_layout Standard
\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset

După încărcarea planurilor agenţii trebuie să-şi construiască arborele de
 intenţie.
 Actualizarea arborelui de intenţie şi ciclul de execuţie (Figura 
\begin_inset CommandInset ref
LatexCommand ref
reference "Fig:executarea activitati"

\end_inset

) fac parte din acelaşi fir de execuţie, acest lucru indicând faptul că
 arborele de intenţie este tot timpul actualizat.
 Procedura de actualizare poate fi apelată din cadrul oricări proceduri.
 
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename executarea activitati.jpg

\end_inset


\begin_inset Caption

\begin_layout Plain Layout
Executarea activităţilor
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "Fig:executarea activitati"

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
Procesul de selectare al intenţilor este alcătuit din patru paşi:
\end_layout

\begin_layout Itemize
Agentul calculează pentru fiecare arbore de intenţie prioritatea de bază.
\end_layout

\begin_layout Itemize
Agentul verifică dacă intenţia se apropie de termenul limită.
\end_layout

\begin_layout Itemize
Agentul ia in considerare interacţile dintre intenţii.
 Pentru acest pas se realizează un graf, fiecare node din graf reprezentând
 un arbore de intenţie, iar legăturile reprezintă interacţiunile.
\end_layout

\begin_layout Itemize
Agentul selectează nodul care are cea mai mare prioritate.
\end_layout

\begin_layout Standard

\end_layout

\begin_layout Bibliography
\begin_inset CommandInset bibitem
LatexCommand bibitem
key "key-1"

\end_inset

John Thangarajah, Lin Padgham and James Harland.
 “Representation and Reasoning for Goals in BDI Agents.” In Twenty-Fifth
 Australasian Computer Science Conference (ASCS2002), Melbourne, Australia.
\end_layout

\begin_layout Bibliography
\begin_inset CommandInset bibitem
LatexCommand bibitem
key "key-1"

\end_inset

John Thangarajah, Michael Winikoff , Lin Padgham and Klaus Fischer.
 “Avoiding Resource Conflicts in Intelligent Agents.” Proceedings of the
 15th European Conference on Artificial Intelligence (ECAI 2002, Lyon, France),
 pp.
 18-22.
\end_layout

\begin_layout Bibliography
\begin_inset CommandInset bibitem
LatexCommand bibitem
key "key-2"

\end_inset

John Thangarajah, Michael Winikoff and Lin Padgham.
 “Detecting & Exploiting Positive Goal Interaction in Intelligent Agents.”
 In Proceedings of the 2nd international joint conference on Autonomous
 agents and multi-agent systems (AAMAS ’03), Melbourne, Australia, pp.
 401-408.
\end_layout

\begin_layout Bibliography
\begin_inset CommandInset bibitem
LatexCommand bibitem
key "key-3"

\end_inset

John Thangarajah, Lin Padhgam, Michael Winikoff.
 “Detecting and Avoiding Interference Between Goals in Intelligent Agents.”
 In Proceedings of the 18th International Joint Conference on Artificial
 Intelligence (IJCAI 2003): Acapulco, Maxcio, pp.721-726.
\end_layout

\begin_layout Bibliography
\begin_inset CommandInset bibitem
LatexCommand bibitem
key "key-4"

\end_inset

Marcus J.
 Huber.
 “JAM: A BDI-theoretic Mobile Agent Architecture.” In Proceedings of the
 third annual conference on Autonomous Agents, Seattle, Washington, United
 States, 1999.
 ACM Press.
 ISBN 1-58113-066-x, pp.
 236-243.
\end_layout

\begin_layout Bibliography
\begin_inset CommandInset bibitem
LatexCommand bibitem
key "key-5"

\end_inset


\end_layout

\end_body
\end_document
